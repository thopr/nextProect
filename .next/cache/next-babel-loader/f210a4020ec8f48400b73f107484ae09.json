{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Router from \"next/router\";\nimport useSWR, { mutate } from \"swr\";\nimport api from \"../services/Api\";\nimport useAuth, { ProtectRoute } from \"../contexts/auth.js\";\nimport Skeleton from \"react-loading-skeleton\";\n\nfunction Dash() {\n  var _useAuth = useAuth(),\n      user = _useAuth.user,\n      loading = _useAuth.loading; // const [tests, settests] = useState();\n  // const [showSkeleton, setshowSkeleton] = useState();\n\n\n  var _useSWR = useSWR(loading ? false : \"rabwa/test\", api.post, {// refreshInterval: 1000,\n  }),\n      _useSWR$data = _useSWR.data;\n\n  _useSWR$data = _useSWR$data === void 0 ? {} : _useSWR$data;\n  var tests = _useSWR$data.data,\n      isValidating = _useSWR.isValidating;\n  var showSkeleton = isValidating || loading;\n  /*useEffect(() => {\r\n    //login(\"b6447333@gmail.com\", \"123\");\r\n      if (!loading) {\r\n      setshowSkeleton(true);\r\n      api.post(\"rabwa/test\", { di: \"d\" }).then((res) => {\r\n        settests(res.data);\r\n        setshowSkeleton(false);\r\n      });\r\n    }\r\n  }, [loading]);*/\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-12\"\n  }, __jsx(\"h1\", {\n    \"test-id\": \"dashboard-title\"\n  }, \"These are your tests\"), __jsx(\"br\", null), __jsx(\"table\", {\n    className: \"table table-responsive-md\"\n  }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", {\n    scope: \"col\"\n  }, \"#\"), __jsx(\"th\", {\n    scope: \"col\"\n  }, \"name\"), __jsx(\"th\", {\n    scope: \"col\"\n  }, \"number\"))), __jsx(\"tbody\", null, tests ? tests.map(function (test, index) {\n    return __jsx(\"tr\", {\n      key: index\n    }, __jsx(\"td\", null, index), __jsx(\"td\", null, test.name), __jsx(\"td\", null, test.number));\n  }) : \"\")), showSkeleton ? __jsx(Skeleton, {\n    height: 40,\n    count: 10\n  }) : \"\"))));\n}\n\nexport default ProtectRoute(Dash);","map":null,"metadata":{},"sourceType":"module"}