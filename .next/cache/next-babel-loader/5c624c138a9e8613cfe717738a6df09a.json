{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport UserInfo from \"../components/UserInfo\";\nimport api from \"../services/Api\";\nimport Footer from \"../components/Footer\";\nimport NeedyCheckUsersOfMandobe from \"./NeedyCheckUsersOfMandobe\";\nimport { GetMandobUsers } from \"../services/api_get\";\nimport Skeleton from \"react-loading-skeleton\";\nimport useAuth, { ProtectRouteMandobe } from \"../contexts/auth.js\";\nimport { useAlert } from \"react-alert\";\nimport { mutate } from \"swr\";\n\nfunction MandobesUsers({\n  mandobe_id,\n  setusersInfoMode,\n  CurrenMandomeName\n}) {\n  // setusersInfoMode(false);\n  console.log(mandobe_id);\n  const mID = mandobe_id > 0 ? mandobe_id : false; //const [project,setProject] = useState(false);\n\n  const {\n    0: request,\n    1: setrequest\n  } = useState(\"firstTime\");\n  const alert = useAlert();\n  const {\n    0: name,\n    1: setname\n  } = useState(0);\n  const {\n    0: members,\n    1: setmembers\n  } = useState(0);\n  const {\n    0: last_coubon,\n    1: setlast_coubon\n  } = useState(0);\n  const {\n    0: total_coubons,\n    1: settotal_coubons\n  } = useState(0);\n  const {\n    0: piority,\n    1: setpiority\n  } = useState(0);\n  const {\n    0: page,\n    1: setpage\n  } = useState(1);\n  const {\n    0: Scity,\n    1: setScity\n  } = useState(\"جدة\");\n  const {\n    0: Saera,\n    1: setSaera\n  } = useState(\"all\");\n  const {\n    0: Scat,\n    1: setScat\n  } = useState(8);\n  const {\n    0: SsearchName,\n    1: setSsearchName\n  } = useState(\"\");\n  const {\n    0: SsearchPhone,\n    1: setSsearchPhone\n  } = useState(\"\");\n  const {\n    0: RsName,\n    1: setRsName\n  } = useState(false);\n  const {\n    0: RsPhone,\n    1: setRsPhone\n  } = useState(false);\n  const {\n    0: spinner,\n    1: setspinner\n  } = useState(false);\n  const {\n    0: TheSelectedcategory,\n    1: setTheSelectedcategory\n  } = useState(8);\n  const {\n    0: TheUser,\n    1: setTheUser\n  } = useState([]);\n  const {\n    user,\n    isAuthenticated,\n    loading\n  } = useAuth();\n  const {\n    0: MUuserID,\n    1: setMUuserID\n  } = useState(0);\n  const {\n    data,\n    isLoading,\n    isError\n  } = GetMandobUsers(request, name, members, last_coubon, total_coubons, piority, page, Scity, Saera, Scat, RsName, RsPhone, mID);\n  const results = isLoading ? false : data.data;\n  console.log(results);\n  const users = isLoading ? false : results.users;\n  const numberOfPages = isLoading ? false : results.numberOfPages;\n  const showSkeleton = isLoading || loading;\n  if (isLoading) console.log(numberOfPages);\n  const {\n    0: citys,\n    1: setcitys\n  } = useState([]);\n  const {\n    0: aeras,\n    1: setaeras\n  } = useState([]);\n  const {\n    0: TheSelectedCity,\n    1: setTheSelectedCity\n  } = useState(\"\");\n  const {\n    0: TheSelectedaera,\n    1: setTheSelectedaera\n  } = useState(\"all\");\n  console.log(\"the selected city : \" + TheSelectedCity);\n  const {\n    0: coubonTotal,\n    1: setcoubonTotal\n  } = useState(0);\n  const {\n    0: CCAs,\n    1: setCCAs\n  } = useState([]);\n  const {\n    0: categories,\n    1: setcategories\n  } = useState([]);\n  const {\n    0: firstTime,\n    1: setfirstTime\n  } = useState(true);\n  const {\n    0: newState,\n    1: setnewState\n  } = useState(true);\n  const {\n    0: statAll,\n    1: setstatAll\n  } = useState([]);\n  const {\n    0: list,\n    1: updateList\n  } = useState([]);\n  const {\n    0: allowed,\n    1: setallowed\n  } = useState(false);\n  const {\n    0: userInfoMode,\n    1: setuserInfoMode\n  } = useState(false);\n\n  function GoBackAndTriggerMutation() {\n    setmodalType(\"cards\");\n  }\n\n  if (firstTime && numberOfPages) {\n    setCCAs(results.options.CCAs);\n    setTheSelectedCity(results.options.CCAs[0].data[0].name);\n    setcitys(results.options.CCAs[0].data);\n    setaeras(results.options.CCAs[0].data[0].data);\n    setcategories(results.options.categories);\n    setfirstTime(false);\n  }\n  /*\r\n    const { data, isLoading, isError } = GetCCAs();\r\n      const results = isLoading ? false : data.data;\r\n    */\n\n\n  const {\n    0: project,\n    1: setProject\n  } = useState(false);\n  const {\n    0: choose,\n    1: setChoose\n  } = useState(\"category\");\n  const {\n    0: category,\n    1: setCategory\n  } = useState(\"\");\n  const {\n    0: company,\n    1: setCompany\n  } = useState(\"\");\n  const {\n    0: branch,\n    1: setBranch\n  } = useState(\"\");\n  const {\n    0: pool,\n    1: setpool\n  } = useState(false);\n  const {\n    0: coubonName,\n    1: setcoubonName\n  } = useState(\"\");\n  const {\n    0: pool_total,\n    1: setpool_total\n  } = useState(0);\n\n  function UpdatePool(amount, section, scoubonName) {\n    setpool(section);\n    setcoubonName(scoubonName);\n    setpool_total(amount);\n  }\n\n  function updatesetstep(thes) {\n    setStep(thes);\n\n    if (request == \"firstTime\") {\n      mutate(\"rabwa/GetMandobUsers?mandobe_id=\" + mID);\n    } else {\n      mutate(\"rabwa/OrderGetMandobUsers?page=\" + page + \"&name=\" + name + \"&members=\" + members + \"&last_coubon=\" + last_coubon + \"&total_coubons=\" + total_coubons + \"&Scity=\" + Scity + \"&Saera=\" + Saera + \"&Scat=\" + Scat + \"&piority=\" + piority + \"&RsName=\" + RsName + \"&RsPhone=\" + RsPhone + \"&mandobe_id=\" + mID);\n    }\n  }\n\n  function myEditUser(theSelectedUser) {\n    console.log(theSelectedUser);\n    setTheUser(theSelectedUser);\n    setStep(2);\n  }\n\n  function myDisUser(theSelectedDisUserId, sStatus) {\n    let approve = sStatus;\n    let theUserid = theSelectedDisUserId;\n    let mydd = {\n      approve,\n      theUserid\n    };\n    console.log(mydd);\n    api.post(\"rabwa/ApproveUser\", mydd).then(res => {\n      if (request == \"firstTime\") {\n        mutate(\"rabwa/GetMandobUsers?mandobe_id=\" + mID);\n      } else {\n        mutate(\"rabwa/OrderGetMandobUsers?page=\" + page + \"&name=\" + name + \"&members=\" + members + \"&last_coubon=\" + last_coubon + \"&total_coubons=\" + total_coubons + \"&Scity=\" + Scity + \"&Saera=\" + Saera + \"&Scat=\" + Scat + \"&piority=\" + piority + \"&RsName=\" + RsName + \"&RsPhone=\" + RsPhone + \"&mandobe_id=\" + mID);\n      }\n\n      alert.show(\"تم بنجاح\", {\n        timeout: 2000,\n        type: \"success\"\n      });\n    });\n  }\n\n  function order() {\n    if (request == \"firstTime\") {\n      setrequest(\"custom\");\n    }\n\n    setRsName(\"false\");\n    setRsPhone(\"false\");\n  }\n\n  function filter() {\n    if (request == \"firstTime\") {\n      setrequest(\"custom\");\n    }\n\n    setRsName(\"false\");\n    setRsPhone(\"false\");\n    setScity(TheSelectedCity);\n    setSaera(TheSelectedaera);\n    setScat(TheSelectedcategory);\n  }\n\n  function phoneS() {\n    if (request == \"firstTime\") {\n      setrequest(\"custom\");\n    }\n\n    setRsName(\"false\");\n    setRsPhone(SsearchPhone);\n  }\n\n  function NameS() {\n    if (request == \"firstTime\") {\n      setrequest(\"custom\");\n    }\n\n    setRsName(SsearchName);\n    setRsPhone(\"false\");\n  }\n\n  function updateArrayall() {\n    console.log(\"here\");\n    updateList(users);\n    setallowed(true);\n    $.each($(\"input[name='sport']\"), function () {\n      $(this).prop(\"checked\", true);\n    });\n  }\n\n  function updateArray(data) {\n    let favorite = list;\n    favorite.push(data);\n    updateList(favorite);\n    setallowed(true); //  setPersonNeeds((PersonNeeds) => PersonNeeds.concat(data));\n    // setPersonNeeds((PersonNeeds) => [...PersonNeeds, data]);\n  }\n\n  function removeUserall() {\n    updateList([]);\n    setallowed(false);\n    $.each($(\"input[name='sport']\"), function () {\n      $(this).prop(\"checked\", false);\n    });\n  }\n\n  function myDistributeCoupons(pool, coubonName, list) {\n    setspinner(true);\n    api.post(\"rabwa/DistributeCoupons\", {\n      pool,\n      coubonName,\n      list\n    }).then(res => {\n      setspinner(false);\n      console.log(res.data);\n\n      if (res.data == \"already exists\") {\n        alert.show(\"إسم الكوبون موجود مسبقا \", {\n          timeout: 2000,\n          type: \"error\"\n        });\n      }\n\n      if (res.data == \"email\") {\n        alert.show(\"الإيميل مستخدم مسبقا\", {\n          timeout: 2000,\n          type: \"error\"\n        });\n      }\n\n      if (res.data > 0) {\n        alert.show(\"تم بنجاح\", {\n          timeout: 2000,\n          type: \"success\"\n        }); //GoBackAndTriggerMutation();\n        //router.push(\"/companys/[name]\", \"/companys/\" + formdata.companyName);\n      }\n    }).catch(err => {\n      setspinner(false);\n      console.log(err);\n    });\n  }\n\n  async function removeUser(id) {\n    let favorite = list;\n\n    if (list.length == 1) {\n      setallowed(false);\n    }\n\n    favorite = await favorite.filter(e => e.id !== id);\n    updateList(favorite);\n    /* let favorite = personNeeds;\r\n    console.log(favorite);\r\n      favorite = await favorite.filter((user) => user.id !== id);\r\n    console.log(favorite);\r\n      setPersonNeeds(favorite);*/\n    // setPersonNeeds([]);\n    //\n    // myset(favorite);\n    //setJoinList(joinList.filter((e) => e !== id));\n    // setPersonNeeds(personNeeds.filter((user) => user.id !== id));\n  }\n  /*\r\n  function settheNeedyNames() {\r\n    let favorite = [];\r\n    $.each($(\"input[name='sport']\"), function () {\r\n      $(this)..prop('checked', true);\r\n    });\r\n      setPersonNeeds(favorite.join(\", \"));\r\n  }*/\n\n\n  const {\n    0: ModelData,\n    1: setModelData\n  } = useState([]);\n  const {\n    0: modalType,\n    1: setmodalType\n  } = useState(\"\");\n\n  function openModal(myuserData, type) {\n    if (type == \"stats\") {\n      // setnewState(true);\n      let tempUserID = myuserData.user_id;\n      setMUuserID(tempUserID);\n      setuserInfoMode(true);\n      console.log(\"----here---\" + tempUserID);\n      console.log(myuserData);\n      console.log(\"here\");\n    } else {\n      setmodalType(type);\n      setModelData(myuserData);\n    }\n  }\n\n  function calculate() {\n    let mydata = list;\n    let startcount = 0;\n\n    for (let index = 0; index < mydata.length; index++) {\n      let myuser = mydata[index];\n      startcount = startcount + parseInt(myuser.share);\n    }\n\n    setcoubonTotal(startcount);\n  }\n\n  function recalculate(value, id) {\n    /* let favorite2 = [];\r\n    $.each($(\"input[name='sport2']\"), function () {\r\n      favorite.push($(this).val());\r\n    });*/\n    let mydata = list;\n    let startcount = 0;\n\n    for (let index = 0; index < mydata.length; index++) {\n      let myuser = mydata[index];\n\n      if (myuser.id == id) {\n        myuser.share = value;\n        updateList(list);\n        startcount = startcount + parseInt(value);\n      } else {\n        startcount = startcount + parseInt(myuser.share);\n      }\n    }\n\n    setcoubonTotal(startcount); //setPersonNeeds(favorite.join(\", \"));\n  }\n\n  function myFunction() {\n    console.log(\"hele\");\n    document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n  }\n\n  function filterFunction() {\n    console.log(\"here\");\n    var input, filter, ul, li, a, i;\n    input = document.getElementById(\"myInput\");\n    filter = input.value.toUpperCase();\n    div = document.getElementById(\"myDropdown\");\n    a = div.getElementsByTagName(\"a\");\n\n    for (i = 0; i < a.length; i++) {\n      txtValue = a[i].textContent || a[i].innerText;\n\n      if (txtValue.toUpperCase().indexOf(filter) > -1) {\n        a[i].style.display = \"\";\n      } else {\n        a[i].style.display = \"none\";\n      }\n    }\n  }\n\n  console.log(\"---------a-------------\");\n  console.log(list);\n  console.log(\"----------b------------\");\n  const {\n    0: oldWoman,\n    1: setOldWoman\n  } = useState(0);\n  const {\n    0: oldMan,\n    1: setOldMan\n  } = useState(0);\n  const {\n    0: accibilityPerson,\n    1: setAccibilityPerson\n  } = useState(0);\n  const {\n    0: baby,\n    1: setBaby\n  } = useState(0);\n  const {\n    0: orphanGirls,\n    1: setOrphanGirls\n  } = useState(0);\n  const {\n    0: orphanBoys,\n    1: setOrphanBoys\n  } = useState(0);\n  const {\n    0: girls,\n    1: setGirls\n  } = useState(0);\n  const {\n    0: guys,\n    1: setGuys\n  } = useState(0);\n  const {\n    0: women,\n    1: setWomen\n  } = useState(0);\n  const {\n    0: men,\n    1: setMen\n  } = useState(0);\n  const options = [{\n    name: \"Swedish\",\n    value: \"sv\"\n  }, {\n    name: \"English\",\n    value: \"en\"\n  }, {\n    type: \"group\",\n    name: \"Group name\",\n    items: [{\n      name: \"Spanish\",\n      value: \"es\"\n    }]\n  }];\n  const {\n    0: step,\n    1: setStep\n  } = useState(1);\n  let step2 = step;\n  return __jsx(React.Fragment, null, __jsx(\"div\", null, userInfoMode ? __jsx(UserInfo, {\n    id: MUuserID,\n    setuserInfoMode: setuserInfoMode\n  }) : __jsx(\"div\", {\n    class: \"container-fluid mt--6\"\n  }, __jsx(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: () => {}\n  }, \"back\"), __jsx(\"div\", {\n    class: \"row justify-content-center\"\n  }, __jsx(\"div\", {\n    class: \" col \"\n  }, __jsx(\"div\", {\n    class: \"card\"\n  }, __jsx(\"div\", {\n    class: \"card-header bg-transparent\"\n  }, __jsx(\"h3\", {\n    class: \"mb-0\"\n  }, \"\\u0627\\u0644\\u0645\\u0633\\u062A\\u0641\\u064A\\u062F\\u064A\\u0646 \\u0644\\u0644\\u0645\\u0646\\u062F\\u0648\\u0628 : \", CurrenMandomeName), __jsx(\"div\", {\n    style: {\n      float: \"right\"\n    }\n  }, __jsx(\"button\", {\n    onClick: () => {\n      // setChoose(\"company\");\n      setusersInfoMode(false);\n    },\n    class: \"btn btn-icon btn-primary\",\n    type: \"button\"\n  }, __jsx(\"span\", {\n    class: \"btn-inner--icon\"\n  }, __jsx(\"i\", {\n    class: \"fa fa-arrow-right\",\n    \"aria-hidden\": \"true\"\n  }))), __jsx(\"h2\", {\n    style: {\n      marginRight: \"0.8em\",\n      display: \"inline\"\n    }\n  }, \"\\u0627\\u0644\\u0639\\u0648\\u062F\\u0629 \\u0627\\u0644\\u0649 \\u0627\\u0644\\u062E\\u0644\\u0641\"), __jsx(\"div\", {\n    style: {\n      clear: \"both\"\n    }\n  }))), __jsx(\"div\", {\n    class: \"card-body\"\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"table-responsive\"\n  }, __jsx(\"div\", null, __jsx(\"table\", {\n    className: \"table align-items-center\",\n    style: {\n      display: step == 1 ? \"\" : \"none\"\n    }\n  }, __jsx(\"thead\", {\n    className: \"thead-light\"\n  }, __jsx(\"tr\", null, __jsx(\"th\", {\n    scope: \"col\",\n    className: \"sort\",\n    \"data-sort\": \"name\"\n  }, \"\\u0627\\u0633\\u0645 \\u0627\\u0644\\u0645\\u0633\\u062A\\u0641\\u064A\\u062F\", \" \"), __jsx(\"th\", {\n    scope: \"col\",\n    className: \"sort\",\n    \"data-sort\": \"name\"\n  }, \"\\u0639\\u062F\\u062F \\u0627\\u0644\\u0623\\u0641\\u0631\\u0627\\u062F\", \" \"), __jsx(\"th\", {\n    scope: \"col\",\n    className: \"sort\",\n    \"data-sort\": \"name\"\n  }, \"\\u0623\\u062E\\u0631 \\u0643\\u0648\\u0628\\u0648\\u0646\", \" \"), __jsx(\"th\", {\n    scope: \"col\",\n    className: \"sort\",\n    \"data-sort\": \"name\"\n  }, \"\\u0627\\u0644\\u0645\\u0635\\u0631\\u0648\\u0641\", \" \"), __jsx(\"th\", {\n    scope: \"col\",\n    className: \"sort\",\n    \"data-sort\": \"name\"\n  }, \"\\u0627\\u0644\\u0623\\u0648\\u0644\\u0648\\u064A\\u0629\", \" \"))), __jsx(\"tbody\", {\n    className: \"list\"\n  }, users.length > 0 ? users.map((data, i) => {\n    return __jsx(NeedyCheckUsersOfMandobe, {\n      data: data,\n      myEditUser: myEditUser,\n      myDisUser: myDisUser,\n      openModal: openModal\n    });\n  }) : \"\")), showSkeleton ? __jsx(Skeleton, {\n    height: 40,\n    count: 10\n  }) : \"\")), step == 2 ? __jsx(EditUser, {\n    TheUser: TheUser,\n    updatesetstep: updatesetstep\n  }) : \"\"), __jsx(\"div\", null, __jsx(\"hr\", null)))))), __jsx(Footer, null))), __jsx(\"div\", {\n    class: \"modal fade\",\n    id: \"modal-default\",\n    tabindex: \"-1\",\n    role: \"dialog\",\n    \"aria-labelledby\": \"modal-default\",\n    \"aria-hidden\": \"true\"\n  }, __jsx(\"div\", {\n    class: \"modal-dialog modal- modal-dialog-centered modal-\",\n    role: \"document\"\n  }, modalType == \"stats\" ? __jsx(\"div\", {\n    class: \"modal-content\"\n  }) : modalType == \"cards\" ? __jsx(\"div\", {\n    class: \"modal-content\"\n  }) : __jsx(\"div\", {\n    class: \"modal-content\"\n  }))));\n}\n\nexport default MandobesUsers;","map":null,"metadata":{},"sourceType":"module"}