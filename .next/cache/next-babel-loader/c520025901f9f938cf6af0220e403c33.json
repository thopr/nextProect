{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\next\\\\contexts\\\\auth.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\nimport Router, { useRouter } from \"next/router\"; //api here is an axios instance\n\nimport api from \"../services/Api\";\nconst AuthContext = /*#__PURE__*/createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: toggler,\n    1: settoggler\n  } = useState(true);\n  useEffect(() => {\n    async function loadUserFromCookies() {\n      let data = false;\n      const token = Cookies.get(\"token\");\n\n      if (token) {\n        console.log(\"Got a token in the cookies, let's see if it is valid\");\n        api.defaults.headers.Authorization = `Bearer ${token}`;\n        await api.post(\"jwt-auth/v1/token/validate\").then(res => {\n          data = res;\n        }).catch(err => {\n          Cookies.remove(\"token\");\n          Cookies.remove(\"user_nicename\");\n          Cookies.remove(\"user_email\");\n          Cookies.remove(\"UserType\");\n          Cookies.remove(\"BracnhCode\");\n          Cookies.remove(\"CompanyCode\");\n          Cookies.remove(\"profile_pic\");\n          Cookies.remove(\"first_name\");\n          Cookies.remove(\"last_name\");\n          api.defaults.headers.Authorization = ``;\n          Router.push(\"/Management\");\n        }); //  const { data: data } = await api.post(\"jwt-auth/v1/token/validate\");\n\n        if (data) {\n          console.log(\"old token is valid\");\n          setUser({\n            user_nicename: Cookies.get(\"user_nicename\"),\n            user_email: Cookies.get(\"user_email\"),\n            UserType: Cookies.get(\"UserType\"),\n            CompanyCode: Cookies.get(\"CompanyCode\"),\n            BracnhCode: Cookies.get(\"BracnhCode\"),\n            profile_pic: Cookies.get(\"profile_pic\"),\n            first_name: Cookies.get(\"first_name\"),\n            last_name: Cookies.get(\"last_name\")\n          });\n        } else {}\n      }\n\n      setLoading(false);\n    }\n\n    loadUserFromCookies();\n  }, []);\n\n  const Sendcond = async phone => {\n    let tempres = await api.get(\"rabwa/getUserCode?phone=\" + phone, {});\n    return tempres;\n  };\n\n  const phoneLogin = async (phone, code) => {\n    const {\n      data: data\n    } = await api.get(\"rabwa/singUserIN?phone=\" + phone + \"&code=\" + code, {});\n\n    if (data) {\n      console.log(data);\n      console.log(\"Got new token\" + data.token);\n      Cookies.set(\"token\", data.token, {\n        expires: 60\n      });\n      Cookies.set(\"user_nicename\", data.user_nicename, {\n        expires: 60\n      });\n      Cookies.set(\"user_email\", data.user_email, {\n        expires: 60\n      });\n      Cookies.set(\"UserType\", data.UserType, {\n        expires: 60\n      });\n      Cookies.set(\"BracnhCode\", data.BracnhCode, {\n        expires: 60\n      });\n      Cookies.set(\"CompanyCode\", data.CompanyCode, {\n        expires: 60\n      });\n      Cookies.set(\"profile_pic\", data.profile_pic, {\n        expires: 60\n      });\n      Cookies.set(\"first_name\", data.first_name, {\n        expires: 60\n      });\n      Cookies.set(\"last_name\", data.last_name, {\n        expires: 60\n      });\n      api.defaults.headers.Authorization = `Bearer ${data.token}`;\n      setUser({\n        user_nicename: data.user_nicename,\n        user_email: data.user_email,\n        UserType: data.UserType,\n        CompanyCode: data.CompanyCode,\n        BracnhCode: data.BracnhCode,\n        profile_pic: data.profile_pic,\n        first_name: data.first_name,\n        last_name: data.last_name\n      });\n      console.log(\"Got user\", user);\n\n      if (data.UserType == \"Company\") {\n        Router.push(\"/CompanyStatistics\"); //return \"Company\";\n      } else if (data.UserType == \"mandobe\") {\n        // return \"Company\";\n        Router.push(\"/MyUsers\");\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const login = async (username, password) => {\n    const {\n      data: data\n    } = await api.post(\"jwt-auth/v1/token\", {\n      username,\n      password\n    });\n\n    if (data) {\n      console.log(data);\n      console.log(\"Got new token\" + data.token);\n      Cookies.set(\"token\", data.token, {\n        expires: 60\n      });\n      Cookies.set(\"user_nicename\", data.user_nicename, {\n        expires: 60\n      });\n      Cookies.set(\"user_email\", data.user_email, {\n        expires: 60\n      });\n      Cookies.set(\"UserType\", data.UserType, {\n        expires: 60\n      });\n      Cookies.set(\"BracnhCode\", data.BracnhCode, {\n        expires: 60\n      });\n      Cookies.set(\"CompanyCode\", data.CompanyCode, {\n        expires: 60\n      });\n      Cookies.set(\"profile_pic\", data.profile_pic, {\n        expires: 60\n      });\n      Cookies.set(\"first_name\", data.first_name, {\n        expires: 60\n      });\n      Cookies.set(\"last_name\", data.last_name, {\n        expires: 60\n      });\n      api.defaults.headers.Authorization = `Bearer ${data.token}`;\n      setUser({\n        user_nicename: data.user_nicename,\n        user_email: data.user_email,\n        UserType: data.UserType,\n        CompanyCode: data.CompanyCode,\n        BracnhCode: data.BracnhCode,\n        profile_pic: data.profile_pic,\n        first_name: data.first_name,\n        last_name: data.last_name\n      });\n      console.log(\"Got user\", user);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const logout = () => {\n    Cookies.remove(\"token\");\n    Cookies.remove(\"user_nicename\");\n    Cookies.remove(\"user_email\");\n    Cookies.remove(\"UserType\");\n    Cookies.remove(\"BracnhCode\");\n    Cookies.remove(\"CompanyCode\");\n    Cookies.remove(\"profile_pic\");\n    Cookies.remove(\"first_name\");\n    Cookies.remove(\"last_name\");\n    api.defaults.headers.Authorization = ``;\n    setUser(null);\n  };\n\n  return __jsx(AuthContext.Provider, {\n    value: {\n      isAuthenticated: !!user,\n      user,\n      login,\n      logout,\n      Sendcond,\n      phoneLogin,\n      loading,\n      logout,\n      toggler,\n      settoggler\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport default function useAuth() {\n  const context = useContext(AuthContext);\n  return context;\n}\nexport function ProtectRoute(Component) {\n  return () => {\n    const {\n      user,\n      isAuthenticated,\n      loading\n    } = useAuth();\n    const router = useRouter();\n    useEffect(() => {\n      if (!isAuthenticated && !loading) {\n        Router.push(\"/Management\");\n      } else if (isAuthenticated) {\n        if (user.UserType != \"admin\") Router.push(\"/\");\n      }\n    }, [loading, isAuthenticated]);\n    return __jsx(Component, _extends({}, arguments, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 12\n      }\n    }));\n  };\n}\nexport function ProtectRouteCompany(Component) {\n  return () => {\n    const {\n      user,\n      isAuthenticated,\n      loading\n    } = useAuth();\n    const router = useRouter();\n    useEffect(() => {\n      if (!isAuthenticated && !loading) {\n        Router.push(\"/login\");\n      } else if (isAuthenticated) {\n        if (user.UserType != \"Company\") Router.push(\"/\");\n      }\n    }, [loading, isAuthenticated]);\n    return __jsx(Component, _extends({}, arguments, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 12\n      }\n    }));\n  };\n}\nexport function ProtectRouteMandobe(Component) {\n  return () => {\n    const {\n      user,\n      isAuthenticated,\n      loading\n    } = useAuth();\n    const router = useRouter();\n    useEffect(() => {\n      if (!isAuthenticated && !loading) {\n        Router.push(\"/login\");\n      } else if (isAuthenticated) {\n        if (user.UserType != \"mandobe\") Router.push(\"/\");\n      }\n    }, [loading, isAuthenticated]);\n    return __jsx(Component, _extends({}, arguments, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 12\n      }\n    }));\n  };\n}","map":{"version":3,"sources":["C:/xampp/htdocs/next/contexts/auth.js"],"names":["React","createContext","useState","useContext","useEffect","Cookies","Router","useRouter","api","AuthContext","AuthProvider","children","user","setUser","loading","setLoading","toggler","settoggler","loadUserFromCookies","data","token","get","console","log","defaults","headers","Authorization","post","then","res","catch","err","remove","push","user_nicename","user_email","UserType","CompanyCode","BracnhCode","profile_pic","first_name","last_name","Sendcond","phone","tempres","phoneLogin","code","set","expires","login","username","password","logout","isAuthenticated","useAuth","context","ProtectRoute","Component","router","arguments","ProtectRouteCompany","ProtectRouteMandobe"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useContext, useEffect } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport Router, { useRouter } from \"next/router\";\r\n\r\n//api here is an axios instance\r\nimport api from \"../services/Api\";\r\n\r\nconst AuthContext = createContext({});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [toggler, settoggler] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function loadUserFromCookies() {\r\n      let data = false;\r\n      const token = Cookies.get(\"token\");\r\n      if (token) {\r\n        console.log(\"Got a token in the cookies, let's see if it is valid\");\r\n        api.defaults.headers.Authorization = `Bearer ${token}`;\r\n        await api\r\n          .post(\"jwt-auth/v1/token/validate\")\r\n          .then((res) => {\r\n            data = res;\r\n          })\r\n          .catch((err) => {\r\n            Cookies.remove(\"token\");\r\n            Cookies.remove(\"user_nicename\");\r\n            Cookies.remove(\"user_email\");\r\n            Cookies.remove(\"UserType\");\r\n            Cookies.remove(\"BracnhCode\");\r\n            Cookies.remove(\"CompanyCode\");\r\n            Cookies.remove(\"profile_pic\");\r\n            Cookies.remove(\"first_name\");\r\n            Cookies.remove(\"last_name\");\r\n\r\n            api.defaults.headers.Authorization = ``;\r\n\r\n            Router.push(\"/Management\");\r\n          });\r\n        //  const { data: data } = await api.post(\"jwt-auth/v1/token/validate\");\r\n        if (data) {\r\n          console.log(\"old token is valid\");\r\n          setUser({\r\n            user_nicename: Cookies.get(\"user_nicename\"),\r\n            user_email: Cookies.get(\"user_email\"),\r\n            UserType: Cookies.get(\"UserType\"),\r\n            CompanyCode: Cookies.get(\"CompanyCode\"),\r\n            BracnhCode: Cookies.get(\"BracnhCode\"),\r\n            profile_pic: Cookies.get(\"profile_pic\"),\r\n            first_name: Cookies.get(\"first_name\"),\r\n            last_name: Cookies.get(\"last_name\"),\r\n          });\r\n        } else {\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n    loadUserFromCookies();\r\n  }, []);\r\n\r\n  const Sendcond = async (phone) => {\r\n    let tempres = await api.get(\"rabwa/getUserCode?phone=\" + phone, {});\r\n\r\n    return tempres;\r\n  };\r\n\r\n  const phoneLogin = async (phone, code) => {\r\n    const { data: data } = await api.get(\r\n      \"rabwa/singUserIN?phone=\" + phone + \"&code=\" + code,\r\n      {}\r\n    );\r\n\r\n    if (data) {\r\n      console.log(data);\r\n\r\n      console.log(\"Got new token\" + data.token);\r\n      Cookies.set(\"token\", data.token, { expires: 60 });\r\n      Cookies.set(\"user_nicename\", data.user_nicename, { expires: 60 });\r\n      Cookies.set(\"user_email\", data.user_email, { expires: 60 });\r\n      Cookies.set(\"UserType\", data.UserType, { expires: 60 });\r\n      Cookies.set(\"BracnhCode\", data.BracnhCode, { expires: 60 });\r\n      Cookies.set(\"CompanyCode\", data.CompanyCode, { expires: 60 });\r\n      Cookies.set(\"profile_pic\", data.profile_pic, { expires: 60 });\r\n      Cookies.set(\"first_name\", data.first_name, { expires: 60 });\r\n      Cookies.set(\"last_name\", data.last_name, { expires: 60 });\r\n\r\n      api.defaults.headers.Authorization = `Bearer ${data.token}`;\r\n\r\n      setUser({\r\n        user_nicename: data.user_nicename,\r\n        user_email: data.user_email,\r\n        UserType: data.UserType,\r\n        CompanyCode: data.CompanyCode,\r\n        BracnhCode: data.BracnhCode,\r\n        profile_pic: data.profile_pic,\r\n        first_name: data.first_name,\r\n        last_name: data.last_name,\r\n      });\r\n      console.log(\"Got user\", user);\r\n      if (data.UserType == \"Company\") {\r\n        Router.push(\"/CompanyStatistics\");\r\n        //return \"Company\";\r\n      } else if (data.UserType == \"mandobe\") {\r\n        // return \"Company\";\r\n        Router.push(\"/MyUsers\");\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const login = async (username, password) => {\r\n    const { data: data } = await api.post(\"jwt-auth/v1/token\", {\r\n      username,\r\n      password,\r\n    });\r\n    if (data) {\r\n      console.log(data);\r\n\r\n      console.log(\"Got new token\" + data.token);\r\n      Cookies.set(\"token\", data.token, { expires: 60 });\r\n      Cookies.set(\"user_nicename\", data.user_nicename, { expires: 60 });\r\n      Cookies.set(\"user_email\", data.user_email, { expires: 60 });\r\n      Cookies.set(\"UserType\", data.UserType, { expires: 60 });\r\n      Cookies.set(\"BracnhCode\", data.BracnhCode, { expires: 60 });\r\n      Cookies.set(\"CompanyCode\", data.CompanyCode, { expires: 60 });\r\n      Cookies.set(\"profile_pic\", data.profile_pic, { expires: 60 });\r\n      Cookies.set(\"first_name\", data.first_name, { expires: 60 });\r\n      Cookies.set(\"last_name\", data.last_name, { expires: 60 });\r\n\r\n      api.defaults.headers.Authorization = `Bearer ${data.token}`;\r\n\r\n      setUser({\r\n        user_nicename: data.user_nicename,\r\n        user_email: data.user_email,\r\n        UserType: data.UserType,\r\n        CompanyCode: data.CompanyCode,\r\n        BracnhCode: data.BracnhCode,\r\n        profile_pic: data.profile_pic,\r\n        first_name: data.first_name,\r\n        last_name: data.last_name,\r\n      });\r\n      console.log(\"Got user\", user);\r\n\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    Cookies.remove(\"token\");\r\n    Cookies.remove(\"user_nicename\");\r\n    Cookies.remove(\"user_email\");\r\n    Cookies.remove(\"UserType\");\r\n    Cookies.remove(\"BracnhCode\");\r\n    Cookies.remove(\"CompanyCode\");\r\n    Cookies.remove(\"profile_pic\");\r\n    Cookies.remove(\"first_name\");\r\n    Cookies.remove(\"last_name\");\r\n\r\n    api.defaults.headers.Authorization = ``;\r\n\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated: !!user,\r\n        user,\r\n        login,\r\n        logout,\r\n        Sendcond,\r\n        phoneLogin,\r\n        loading,\r\n        logout,\r\n        toggler,\r\n        settoggler,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default function useAuth() {\r\n  const context = useContext(AuthContext);\r\n\r\n  return context;\r\n}\r\n\r\nexport function ProtectRoute(Component) {\r\n  return () => {\r\n    const { user, isAuthenticated, loading } = useAuth();\r\n    const router = useRouter();\r\n\r\n    useEffect(() => {\r\n      if (!isAuthenticated && !loading) {\r\n        Router.push(\"/Management\");\r\n      } else if (isAuthenticated) {\r\n        if (user.UserType != \"admin\") Router.push(\"/\");\r\n      }\r\n    }, [loading, isAuthenticated]);\r\n\r\n    return <Component {...arguments} />;\r\n  };\r\n}\r\n\r\nexport function ProtectRouteCompany(Component) {\r\n  return () => {\r\n    const { user, isAuthenticated, loading } = useAuth();\r\n    const router = useRouter();\r\n\r\n    useEffect(() => {\r\n      if (!isAuthenticated && !loading) {\r\n        Router.push(\"/login\");\r\n      } else if (isAuthenticated) {\r\n        if (user.UserType != \"Company\") Router.push(\"/\");\r\n      }\r\n    }, [loading, isAuthenticated]);\r\n\r\n    return <Component {...arguments} />;\r\n  };\r\n}\r\n\r\nexport function ProtectRouteMandobe(Component) {\r\n  return () => {\r\n    const { user, isAuthenticated, loading } = useAuth();\r\n    const router = useRouter();\r\n\r\n    useEffect(() => {\r\n      if (!isAuthenticated && !loading) {\r\n        Router.push(\"/login\");\r\n      } else if (isAuthenticated) {\r\n        if (user.UserType != \"mandobe\") Router.push(\"/\");\r\n      }\r\n    }, [loading, isAuthenticated]);\r\n\r\n    return <Component {...arguments} />;\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}