{"ast":null,"code":"var __jsx = React.createElement;\nimport Admin_nav from \"../components/Admin_nav\";\nimport React, { useState, useEffect } from \"react\";\nimport HeaderNav from \"../components/HeaderNav\";\nimport api from \"../services/Api\";\nimport Footer from \"../components/Footer\";\nimport { GetFullCCAs } from \"../services/api_get\";\nimport useAuth, { ProtectRoute } from \"../contexts/auth.js\";\nimport { useAlert } from \"react-alert\";\nimport Router from \"next/router\";\n\nfunction Table() {\n  const alert = useAlert(); //const [project,setProject] = useState(false);\n\n  const {\n    toggler,\n    settoggler,\n    loading\n  } = useAuth();\n  const {\n    0: spinner,\n    1: setspinner\n  } = useState(false);\n  const {\n    data,\n    isLoading,\n    isError\n  } = GetFullCCAs();\n  const results = isLoading ? false : data.data;\n  console.log(results);\n  const showSkeleton = isLoading || loading;\n  const {\n    0: CCAs,\n    1: setCCAs\n  } = useState([]);\n  const {\n    0: citys,\n    1: setcitys\n  } = useState([]);\n  const {\n    0: aeras,\n    1: setaeras\n  } = useState([]);\n  const {\n    0: TheSelectedCountry,\n    1: setTheSelectedCountry\n  } = useState(\"\");\n  const {\n    0: TheSelectedCity,\n    1: setTheSelectedCity\n  } = useState(\"\");\n  const {\n    0: TheSelectedaera,\n    1: setTheSelectedaera\n  } = useState(\"all\");\n  const {\n    0: firstTime,\n    1: setfirstTime\n  } = useState(true);\n  const {\n    0: categories,\n    1: setcategories\n  } = useState([]);\n\n  if (firstTime && results) {\n    setCCAs(results.options.CCAs);\n    setTheSelectedCity(results.options.CCAs[0].data[0].name);\n    setTheSelectedCountry(results.options.CCAs[0].name);\n    setcitys(results.options.CCAs[0].data);\n    setaeras(results.options.CCAs[0].data[0].data);\n    setfirstTime(false);\n  }\n\n  const {\n    0: familyType,\n    1: setfamilyType\n  } = useState(\"family\");\n  const {\n    0: priority,\n    1: setpriority\n  } = useState(\"normal\");\n  const {\n    0: FirstName,\n    1: setFirstName\n  } = useState(\"\");\n  const {\n    0: LastName,\n    1: setLastName\n  } = useState(\"\");\n  const {\n    0: email,\n    1: setemail\n  } = useState(\"\");\n  const {\n    0: phone,\n    1: setphone\n  } = useState(\"\");\n  const {\n    0: mempersCount,\n    1: setmempersCount\n  } = useState(0);\n  const {\n    0: share,\n    1: setshare\n  } = useState(0);\n  const {\n    0: oldWoman,\n    1: setOldWoman\n  } = useState(0);\n  const {\n    0: oldMan,\n    1: setOldMan\n  } = useState(0);\n  const {\n    0: accibilityPerson,\n    1: setAccibilityPerson\n  } = useState(0);\n  const {\n    0: baby,\n    1: setBaby\n  } = useState(0);\n  const {\n    0: orphanGirls,\n    1: setOrphanGirls\n  } = useState(0);\n  const {\n    0: orphanBoys,\n    1: setOrphanBoys\n  } = useState(0);\n  const {\n    0: girls,\n    1: setGirls\n  } = useState(0);\n  const {\n    0: guys,\n    1: setGuys\n  } = useState(0);\n  const {\n    0: women,\n    1: setWomen\n  } = useState(0);\n  const {\n    0: men,\n    1: setMen\n  } = useState(0);\n  const {\n    0: widows,\n    1: setWidows\n  } = useState(0);\n  const {\n    0: girl,\n    1: setgirl\n  } = useState(0);\n  const {\n    0: boy,\n    1: setboy\n  } = useState(0);\n  const {\n    0: personNeeds,\n    1: setPersonNeeds\n  } = useState(\"\");\n  const {\n    0: step,\n    1: setStep\n  } = useState(1);\n  const {\n    0: list,\n    1: updateList\n  } = useState([]);\n  const {\n    0: allowed,\n    1: setallowed\n  } = useState(false);\n\n  function updateArray(data) {\n    let favorite = list;\n    favorite.push(data);\n    updateList(favorite);\n    setallowed(true); //  setPersonNeeds((PersonNeeds) => PersonNeeds.concat(data));\n    // setPersonNeeds((PersonNeeds) => [...PersonNeeds, data]);\n  }\n\n  function mysubmit() {\n    let checke = true;\n    let data = {\n      TheSelectedCity,\n      TheSelectedaera,\n      FirstName,\n      LastName,\n      email,\n      phone,\n      TheSelectedCountry\n    };\n    console.log(data);\n\n    if (FirstName == \"\") {\n      checke = false;\n      alert.show(\"الرجاء كتابة الإسم الأول\", {\n        timeout: 2000,\n        type: \"error\"\n      });\n    }\n\n    if (LastName == \"\") {\n      checke = false;\n      alert.show(\"الرجاء كتابة الإسم الاخير\", {\n        timeout: 2000,\n        type: \"error\"\n      });\n    }\n\n    if (phone == \"\") {\n      checke = false;\n      alert.show(\"الرجاء كتابة رقم الجوال\", {\n        timeout: 2000,\n        type: \"error\"\n      });\n    }\n\n    setspinner(true);\n\n    if (checke) {\n      api.post(\"rabwa/CreatNewMandob\", data).then(res => {\n        setspinner(false);\n        console.log(res.data);\n\n        if (res.data == \"already exists\") {\n          alert.show(\"إسم الكوبون موجود مسبقا \", {\n            timeout: 2000,\n            type: \"error\"\n          });\n        }\n\n        if (res.data == \"phone\") {\n          alert.show(\"رقم الجوال مستخدم مسبقا\", {\n            timeout: 2000,\n            type: \"error\"\n          });\n        }\n\n        if (res.data > 0) {\n          alert.show(\"تم بنجاح\", {\n            timeout: 2000,\n            type: \"success\"\n          });\n          Router.push(\"/Mandobes\"); //GoBackAndTriggerMutation();\n          //router.push(\"/companys/[name]\", \"/companys/\" + formdata.companyName);\n        }\n      }).catch(err => {\n        alert.show(\"حصل خطأ\", {\n          timeout: 2000,\n          type: \"error\"\n        });\n        setspinner(false);\n        console.log(err);\n      });\n    }\n  }\n\n  let step2 = step;\n  return __jsx(React.Fragment, null, __jsx(\"body\", {\n    className: \"rtl g-sidenav-show g-sidenav-pinned\",\n    dir: \"rtl\"\n  }, __jsx(\"div\", null, __jsx(Admin_nav, null), __jsx(\"div\", {\n    class: \"main-content\",\n    id: \"panel\"\n  }, __jsx(HeaderNav, null), __jsx(\"div\", {\n    class: \"container-fluid mt--6\"\n  }, __jsx(\"div\", {\n    class: \"row justify-content-center\"\n  }, __jsx(\"div\", {\n    class: \" col \"\n  }, __jsx(\"div\", {\n    class: \"card\"\n  }, __jsx(\"div\", {\n    class: \"card-header bg-transparent\"\n  }, __jsx(\"h3\", {\n    class: \"mb-0\"\n  }, \"\\u062A\\u0633\\u062C\\u064A\\u0644 \\u0645\\u0646\\u062F\\u0648\\u0628 \\u062C\\u062F\\u064A\\u062F\")), __jsx(\"div\", {\n    class: \"card-body\"\n  }, step == 1 ? __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"col-lg-4\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    className: \"form-control-label\"\n  }, \"\\u0627\\u0644\\u062F\\u0648\\u0644\\u0629\"), __jsx(\"select\", {\n    name: \"county\",\n    onChange: e => {\n      let selectedCounty = e.target.value;\n      setTheSelectedCountry(selectedCounty);\n      /*if (firstTime) {\r\n          setfirstTime(false);\r\n        }*/\n\n      for (let index = 0; index < CCAs.length; index++) {\n        const tempconunty = CCAs[index];\n\n        if (tempconunty.name === selectedCounty) {\n          setcitys(tempconunty.data);\n\n          if (tempconunty.data[0]) {\n            setTheSelectedCity(tempconunty.data[0].name);\n            setaeras(tempconunty.data[0].data);\n          } else {\n            setaeras([]);\n          }\n        }\n      }\n    },\n    class: \"form-control\"\n  }, CCAs ? CCAs.map((county, index) => {\n    return __jsx(\"option\", null, county.name);\n  }) : \"\"))), __jsx(\"div\", {\n    className: \"col-lg-4\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    className: \"form-control-label\"\n  }, \"\\u0627\\u0644\\u0645\\u062F\\u064A\\u0646\\u0629\"), __jsx(\"select\", {\n    id: \"mycity\",\n    name: \"city\",\n    onChange: e => {\n      let selectedcity = e.target.value;\n      setTheSelectedCity(e.target.value);\n      /*if (firstTime) {\r\n          setfirstTime(false);\r\n        }*/\n\n      for (let index = 0; index < citys.length; index++) {\n        const tempcity = citys[index];\n\n        if (tempcity.name === selectedcity) {\n          setaeras(tempcity.data);\n        }\n      }\n    },\n    class: \"form-control\"\n  }, citys.length > 0 ? citys.map((city, index) => {\n    return __jsx(\"option\", {\n      value: city.name\n    }, city.name);\n  }) : \"\"))), __jsx(\"div\", {\n    className: \"col-lg-4\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    className: \"form-control-label\"\n  }, \"\\u0627\\u0644\\u0645\\u0646\\u0637\\u0642\\u0629\"), __jsx(\"select\", {\n    name: \"aeras\",\n    onChange: e => {\n      setTheSelectedaera(e.target.value);\n    },\n    class: \"form-control\"\n  }, __jsx(\"option\", {\n    value: \"0\"\n  }, \"\\u0627\\u0644\\u0643\\u0644\"), aeras.length > 0 ? aeras.map((aeras, index) => {\n    return __jsx(\"option\", {\n      value: aeras.name\n    }, aeras.name);\n  }) : \"\"))), __jsx(\"h6\", {\n    className: \"heading-small text-muted mb-4\"\n  }, \"\\u0645\\u0639\\u0644\\u0648\\u0645\\u0627\\u062A \\u0627\\u0644\\u0645\\u0646\\u062F\\u0648\\u0628\"), __jsx(\"div\", {\n    className: \"col-lg-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    className: \"form-control-label\"\n  }, \"\\u0627\\u0644\\u0625\\u0633\\u0645 \\u0627\\u0644\\u0623\\u0648\\u0644\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"FirstName\",\n    onChange: e => {\n      setFirstName(e.target.value);\n    },\n    value: FirstName,\n    className: \"form-control\",\n    placeholder: \"\\u0627\\u0644\\u0625\\u0633\\u0645 \\u0627\\u0644\\u0623\\u0648\\u0644\"\n  }))), __jsx(\"div\", {\n    className: \"col-lg-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    className: \"form-control-label\"\n  }, \"\\u0627\\u0644\\u0625\\u0633\\u0645 \\u0627\\u0644\\u0625\\u062E\\u064A\\u0631\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"LastName\",\n    onChange: e => {\n      setLastName(e.target.value);\n    },\n    value: LastName,\n    className: \"form-control\",\n    placeholder: \"\\u0627\\u0644\\u0625\\u0633\\u0645 \\u0627\\u0644\\u0625\\u062E\\u064A\\u0631\"\n  }))), __jsx(\"div\", {\n    className: \"col-lg-12\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    className: \"form-control-label\"\n  }, \"\\u0631\\u0642\\u0645 \\u0627\\u0644\\u062C\\u0648\\u0627\\u0644\"), __jsx(\"input\", {\n    type: \"number\",\n    name: \"phone\",\n    onChange: e => {\n      setphone(e.target.value);\n    },\n    value: phone,\n    className: \"form-control\",\n    placeholder: \"96650xxxxx\"\n  }))), __jsx(\"hr\", null), __jsx(\"hr\", null)) : \"\", __jsx(\"div\", null, __jsx(\"div\", {\n    style: {\n      margin: \"0 auto\",\n      textAlign: \"center\",\n      marginTop: \"9em\"\n    }\n  }, __jsx(\"div\", {\n    style: {\n      textAlign: \"left\"\n    }\n  }, __jsx(\"button\", {\n    class: \"btn btn-icon btn-success\",\n    onClick: () => {\n      mysubmit();\n    },\n    type: \"button\"\n  }, __jsx(\"span\", {\n    style: {\n      marginLeft: \".75em\",\n      marginRight: \"auto\"\n    },\n    class: \"btn-inner--text\"\n  }, \"\\u0625\\u0646\\u0634\\u0627\\u0621\"), \"     \", __jsx(\"span\", {\n    class: \"btn-inner--icon\"\n  }, __jsx(\"i\", {\n    class: \"ni ni-send\"\n  })))))))))), __jsx(Footer, null))))));\n}\n\nexport default ProtectRoute(Table);","map":null,"metadata":{},"sourceType":"module"}